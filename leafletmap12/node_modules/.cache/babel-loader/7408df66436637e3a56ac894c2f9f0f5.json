{"ast":null,"code":"var _jsxFileName = \"/home/developer/leafletmap12/src/Map.js\";\nimport React from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { GeoJSON } from 'react-leaflet'; //import axios from 'axios';\n// import L from 'leaflet';\n//import ReactDOM from 'react-dom';\n//import Ajax from 'react-ajax';\n\nclass Map extends React.Component {\n  constructor() {\n    super();\n\n    this.onEachFeature = (feature, layer) => {\n      layer.on('click', function (e) {\n        var omalayer = e.target;\n        omalayer.bindPopup(omalayer.feature.properties.NIMI + \" \" + omalayer.feature.properties.URL + \"<br>\" + omalayer.feature.properties.FID);\n      });\n    };\n\n    this.state = {\n      omadata: []\n    };\n  } //https://techiediaries.com/react-ajax\n\n\n  componentDidMount() {\n    //    fetch('https://gist.githubusercontent.com/NL-0/b6f17f8f86598eab84087db42c78f83a/raw/9699816ee7b9336e383d24082c40456bceaf6ff9/hel4.geojson')\n    fetch('https://github.com/anttisuutarinen/uusigeodata').then(response => response.json()).then(jsonData => {\n      this.setState({\n        omadata: jsonData\n      });\n    }).catch(error => {\n      alert(\"error jsondata: \" + error);\n    });\n  }\n\n  render() {\n    return console.log(this.state.omadata), React.createElement(LeafletMap, {\n      center: [60, 20],\n      zoom: 6,\n      maxZoom: 10,\n      attributionControl: true,\n      zoomControl: true,\n      doubleClickZoom: false,\n      scrollWheelZoom: true,\n      dragging: true,\n      easeLinearity: 0.35,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      position: [50, 10],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Popup for any custom information.\")), React.createElement(GeoJSON, {\n      key: this.state.omadata,\n      data: this.state.omadata,\n      style: this.getStyle,\n      onEachFeature: this.onEachFeature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"}\");\n  }\n\n  getStyle(feature, layer) {\n    return {\n      color: '#006400',\n      weight: 5,\n      opacity: 0.65\n    };\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/developer/leafletmap12/src/Map.js"],"names":["React","Map","LeafletMap","Marker","Popup","TileLayer","GeoJSON","Component","constructor","onEachFeature","feature","layer","on","e","omalayer","target","bindPopup","properties","NIMI","URL","FID","state","omadata","componentDidMount","fetch","then","response","json","jsonData","setState","catch","error","alert","render","console","log","getStyle","color","weight","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,SAA3C,QAA4D,eAA5D;AACA,SAAQC,OAAR,QAAsB,eAAtB,C,CACA;AACA;AACA;AACA;;AAEA,MAAML,GAAN,SAAkBD,KAAK,CAACO,SAAxB,CACA;AACEC,EAAAA,WAAW,GACX;AACE;;AADF,SA6DAC,aA7DA,GA6DgB,CAACC,OAAD,EAAUC,KAAV,KAChB;AACEA,MAAAA,KAAK,CAACC,EAAN,CAAS,OAAT,EAAkB,UAASC,CAAT,EAClB;AACE,YAAIC,QAAQ,GAACD,CAAC,CAACE,MAAf;AACAD,QAAAA,QAAQ,CAACE,SAAT,CAAmBF,QAAQ,CAACJ,OAAT,CAAiBO,UAAjB,CAA4BC,IAA5B,GAAmC,GAAnC,GACfJ,QAAQ,CAACJ,OAAT,CAAiBO,UAAjB,CAA4BE,GADb,GACmB,MADnB,GAEfL,QAAQ,CAACJ,OAAT,CAAiBO,UAAjB,CAA4BG,GAFhC;AAGD,OAND;AAOD,KAtED;;AAGE,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAE;AADA,KAAX;AAGF,GARF,CAUE;;;AACAC,EAAAA,iBAAiB,GACjB;AACF;AACMC,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,QAAD,IAAc;AAElB,WAAKC,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAEM;AADG,OAAd;AAID,KARD,EASCE,KATD,CASQC,KAAD,IACP;AACEC,MAAAA,KAAK,CAAC,qBAAqBD,KAAtB,CAAL;AACD,KAZD;AAaH;;AAEDE,EAAAA,MAAM,GACN;AAEE,WACEC,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,OAAvB,GACA,oBAAC,UAAD;AACA,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CADR;AAEA,MAAA,IAAI,EAAE,CAFN;AAGA,MAAA,OAAO,EAAE,EAHT;AAIA,MAAA,kBAAkB,EAAE,IAJpB;AAKA,MAAA,WAAW,EAAE,IALb;AAMA,MAAA,eAAe,EAAE,KANjB;AAOA,MAAA,eAAe,EAAE,IAPjB;AAQA,MAAA,QAAQ,EAAE,IARV;AASA,MAAA,aAAa,EAAE,IATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWA,oBAAC,SAAD;AACE,MAAA,GAAG,EAAC,yCADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,EAeA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CAfA,EAoBA,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,OAAzB;AAAkC,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,OAAnD;AAA4D,MAAA,KAAK,EAAE,KAAKc,QAAxE;AAAkF,MAAA,aAAa,EAAE,KAAK3B,aAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBA,MAFF;AA6BD;;AAaD2B,EAAAA,QAAQ,CAAC1B,OAAD,EAAUC,KAAV,EAAiB;AACvB,WAAO;AACL0B,MAAAA,KAAK,EAAE,SADF;AAELC,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD;;AAhFH;;AAmFA,eAAetC,GAAf","sourcesContent":["import React from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer } from 'react-leaflet';\nimport {GeoJSON} from 'react-leaflet';\n//import axios from 'axios';\n// import L from 'leaflet';\n//import ReactDOM from 'react-dom';\n//import Ajax from 'react-ajax';\n\nclass Map extends React.Component\n{\n  constructor()\n  {\n    super();\n\n    this.state={\n      omadata: []\n    };\n }\n\n  //https://techiediaries.com/react-ajax\n  componentDidMount()\n  {\n//    fetch('https://gist.githubusercontent.com/NL-0/b6f17f8f86598eab84087db42c78f83a/raw/9699816ee7b9336e383d24082c40456bceaf6ff9/hel4.geojson')\n      fetch('https://github.com/anttisuutarinen/uusigeodata')\n      .then(response => response.json())\n      .then((jsonData) => {\n\n        this.setState({\n          omadata: jsonData,\n        });\n\n      })\n      .catch((error) =>\n      {\n        alert(\"error jsondata: \" + error);\n      })\n  }\n\n  render()\n  {\n\n    return (\n      console.log(this.state.omadata),\n      <LeafletMap\n      center={[60, 20]}\n      zoom={6}\n      maxZoom={10}\n      attributionControl={true}\n      zoomControl={true}\n      doubleClickZoom={false}\n      scrollWheelZoom={true}\n      dragging={true}\n      easeLinearity={0.35}\n    >\n      <TileLayer\n        url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n      />\n\n      <Marker position={[50, 10]}>\n        <Popup>\n          Popup for any custom information.\n        </Popup>\n      </Marker>\n      <GeoJSON key={this.state.omadata} data={this.state.omadata} style={this.getStyle} onEachFeature={this.onEachFeature}/>\n\n\n    }\n\n    </LeafletMap>\n  );   \n  }\n  \n  onEachFeature = (feature, layer) =>\n  {\n    layer.on('click', function(e)\n    {\n      var omalayer=e.target;\n      omalayer.bindPopup(omalayer.feature.properties.NIMI + \" \"\n        + omalayer.feature.properties.URL + \"<br>\"\n        + omalayer.feature.properties.FID);\n    });\n  }\n\n  getStyle(feature, layer) {\n    return {\n      color: '#006400',\n      weight: 5,\n      opacity: 0.65\n    }\n  }\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}